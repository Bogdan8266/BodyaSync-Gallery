import os
import random
import requests
import json
from datetime import datetime
from gradio_client import Client, file

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –æ–±–æ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤ ---
HF_SPACE_URL = "bodyapromax2010/bodyasync-image-caption" # "–û—á—ñ" - –¥–ª—è –æ–ø–∏—Å—É
OLLAMA_API_URL = "http://localhost:11434/api/generate"  # "–î—É—à–∞" - –¥–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É
OLLAMA_MODEL_NAME = "gemma3:1b"                          # –ú–æ–¥–µ–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ç–µ–∫—Å—Ç–æ–º
IMAGE_FOLDER = "test_images"

# --- –§—É–Ω–∫—Ü—ñ—è 1: –û—Ç—Ä–∏–º—É—î–º–æ "—Å–∏—Ä–∏–π" –æ–ø–∏—Å –∑ Hugging Face ---
def get_raw_english_description(image_path):
    """
    –ó–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –¥–æ HF Space, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π —Ç–µ—Ö–Ω—ñ—á–Ω–∏–π –æ–ø–∏—Å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
    """
    print(f"üïµÔ∏è –ö—Ä–æ–∫ 1: –û—Ç—Ä–∏–º—É—é –¥–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –∑ '{HF_SPACE_URL}'...")
    try:
        client = Client(HF_SPACE_URL)
        result = client.predict(file(image_path), api_name="/predict")
        description = result[0] if isinstance(result, (list, tuple)) else result
        print("‚úÖ –û–ø–∏—Å –æ—Ç—Ä–∏–º–∞–Ω–æ.")
        return description.strip()
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞ –ö—Ä–æ—Ü—ñ 1 (Hugging Face): {e}")
        return None

# --- –§—É–Ω–∫—Ü—ñ—è 2: –°—Ç–≤–æ—Ä—é—î–º–æ "—Ç–µ–ø–ª–∏–π" –ø—ñ–¥–ø–∏—Å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Ollama (–í–ò–ü–†–ê–í–õ–ï–ù–ê –í–ï–†–°–Ü–Ø) ---
def create_warm_caption_from_description(english_description, date_info):
    """
    –ë–µ—Ä–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏–π –æ–ø–∏—Å, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –π–æ–≥–æ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É –º–æ–¥–µ–ª—å (Gemma)
    —ñ –ø—Ä–æ—Å–∏—Ç—å –∑—Ä–æ–±–∏—Ç–∏ –∑ –Ω—å–æ–≥–æ –∫–æ—Ä–æ—Ç–∫–∏–π, –≥–∞—Ä–Ω–∏–π –ø—ñ–¥–ø–∏—Å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –í–†–ê–•–û–í–£–Æ–ß–ò –î–ê–¢–£.
    """
    print(f"‚úçÔ∏è –ö—Ä–æ–∫ 2: –ì–µ–Ω–µ—Ä—É—é —Ç–µ–ø–ª–∏–π –ø—ñ–¥–ø–∏—Å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é '{OLLAMA_MODEL_NAME}'...")
    
    # –ü—Ä–æ–º–ø—Ç —Ç–µ–ø–µ—Ä —è–≤–Ω–æ –≤–∫–ª—é—á–∞—î 'Time context', —è–∫ —Ç–∏ —ñ —Ö–æ—Ç—ñ–≤.
    prompt_text = f"""
    You are a creative assistant. Your task is to transform a detailed, technical image description into a short, warm, and nostalgic caption in Ukrainian.

    Use this information to create the caption:
    - Technical description (what is in the photo): "{english_description}"
    - Time context (when the photo was taken): "{date_info}"

    Based on this information, do the following:
    1. Translate the main idea into Ukrainian.
    2. Shorten it to 1-2 beautiful, personal-sounding sentences.
    3. Weave the time context into the caption if it feels natural. For example: "–ü–∞–º'—è—Ç–∞—î—à —Ü–µ–π —á—É–¥–æ–≤–∏–π –∑–∏–º–æ–≤–∏–π –¥–µ–Ω—å?" or "–Ø–∫ –∂–µ —Ç–µ–ø–ª–æ –±—É–ª–æ —Ç–æ–≥–æ –ª—ñ—Ç–∞...".
    
    Write ONLY the final Ukrainian caption, nothing else.
    """
    
    payload = {
        "model": OLLAMA_MODEL_NAME,
        "prompt": prompt_text,
        "stream": False
    }
    
    try:
        # –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ —Ç–≤—ñ–π —Å–µ—Ä–≤–µ—Ä Ollama –∑–∞–ø—É—â–µ–Ω–æ!
        response = requests.post(OLLAMA_API_URL, json=payload, timeout=60)
        response.raise_for_status()
        
        response_data = response.json()
        caption = response_data.get("response", "–ß—É–¥–æ–≤–∏–π —Å–ø–æ–≥–∞–¥!").strip()
        print("‚úÖ –ü—ñ–¥–ø–∏—Å –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.")
        return caption
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞ –ö—Ä–æ—Ü—ñ 2 (Ollama): {e}. –ü–µ—Ä–µ–≤—ñ—Ä, —á–∏ –∑–∞–ø—É—â–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä Ollama.")
        return "–ü—Ä–æ—Å—Ç–æ –≥–∞—Ä–Ω–∏–π –¥–µ–Ω—å!"

# --- –§—É–Ω–∫—Ü—ñ—è 3: –ü—Ä–æ—Å—Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è —Å–ø–æ–≥–∞–¥—É ---
def is_good_memory(caption):
    if not caption: return False
    stop_words = ["screenshot", "text", "document", "chart", "diagram", "interface", "code"]
    caption_lower = caption.lower()
    return not any(word in caption_lower for word in stop_words)

# --- –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ ---
if __name__ == "__main__":
    if not os.path.isdir(IMAGE_FOLDER):
        print(f"üõë –ü–∞–ø–∫—É '{IMAGE_FOLDER}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –°—Ç–≤–æ—Ä—ñ—Ç—å —ó—ó —Ç–∞ –¥–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ.")
        exit()
        
    all_images = [f for f in os.listdir(IMAGE_FOLDER) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]
    
    if not all_images:
        print(f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–æ–±—Ä–∞–∂–µ–Ω—å —É –ø–∞–ø—Ü—ñ '{IMAGE_FOLDER}'.")
    else:
        random_image_name = random.choice(all_images)
        image_path = os.path.join(IMAGE_FOLDER, random_image_name)
        
        # –ö–†–û–ö 1: –û—Ç—Ä–∏–º—É—î–º–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏–π –æ–ø–∏—Å
        raw_description = get_raw_english_description(image_path)
        
        if raw_description:
            print(f"\n--- –°–∏—Ä–∏–π –æ–ø–∏—Å –≤—ñ–¥ Florence-2 ---\n{raw_description}\n---------------------------------\n")

            if is_good_memory(raw_description):
                # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞—Ç—É –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –≤ –ø—Ä–æ–º–ø—Ç
                try:
                    date_info = f"–∑—Ä–æ–±–ª–µ–Ω–æ {datetime.fromtimestamp(os.path.getmtime(image_path)).strftime('%d %B, %Y —Ä–æ–∫—É')}"
                except Exception:
                    date_info = "–∫–æ–ª–∏—Å—å —É –º–∏–Ω—É–ª–æ–º—É"
                
                # –ö–†–û–ö 2: –ì–µ–Ω–µ—Ä—É—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –ø—ñ–¥–ø–∏—Å, –ø–µ—Ä–µ–¥–∞—é—á–∏ —ñ –æ–ø–∏—Å, —ñ –¥–∞—Ç—É
                final_caption = create_warm_caption_from_description(raw_description, date_info)
                
                print("\nüéâüéâüéâ –í–ê–® –°–¨–û–ì–û–î–ù–Ü–®–ù–Ü–ô –°–ü–û–ì–ê–î! üéâüéâüéâ")
                print(f"–§–æ—Ç–æ: {random_image_name}")
                print(f"–ü—ñ–¥–ø–∏—Å: {final_caption}")
                print("üéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâ")
            else:
                print(f"üòï –§–æ—Ç–æ '{random_image_name}' –Ω–µ —Å—Ö–æ–∂–µ –Ω–∞ —Ö–æ—Ä–æ—à–∏–π —Å–ø–æ–≥–∞–¥ (–º–æ–∂–ª–∏–≤–æ, —Ü–µ —Å–∫—Ä—ñ–Ω—à–æ—Ç).")
        else:
            print("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ–Ω–∞—Ç–∏ –ö—Ä–æ–∫ 1. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑'—î–¥–Ω–∞–Ω–Ω—è —Ç–∞ —Å—Ç–∞—Ç—É—Å Hugging Face Space.")